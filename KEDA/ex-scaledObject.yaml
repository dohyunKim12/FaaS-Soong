apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: keda
  labels:
    app: nginx
spec:
  replicas: 0
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      annotations:
        config.linkerd.io/proxy-cpu-limit: "1"
        config.linkerd.io/proxy-cpu-request: "0.1"
        config.linkerd.io/proxy-memory-limit: 1Gi
        config.linkerd.io/proxy-memory-request: 128Mi
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: 128M
            cpu: 125m
          limits:
            memory: 1024M
            cpu: 1000m

---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: keda
  labels:
    app: nginx
spec:
  type: NodePort     # 서비스 타입
  ports:
  - port: 8080       # 서비스 포트
    targetPort: 80   # 타켓, 즉 pod의 포트
    protocol: TCP
    name: http
  selector:
    app: nginx

---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: first-test
  namespace: keda
spec:
  scaleTargetRef:
    apiVersion: apps/v1   # Optional. Default: apps/v1
    kind: Deployment         # Optional. Default: Deployment
    name: nginx-deployment         # Mandatory. Must be in the same namespace as the ScaledObject
    envSourceContainerName: nginx  # Optional. Default: .spec.template.spec.containers[0]
  pollingInterval: 30                                # Optional. Default: 30 seconds
  cooldownPeriod: 300                               # Optional. Default: 300 seconds
  minReplicaCount: 0                                 # Optional. Default: 0
  maxReplicaCount: 100                               # Optional. Default: 100
  advanced:                                          # Optional. Section to specify advanced options
    restoreToOriginalReplicaCount: false        # Optional. Default: false
    horizontalPodAutoscalerConfig:                   # Optional. Section to specify HPA related options
      behavior:                                      # Optional. Use to modify HPA's scaling behavior
        scaleDown:
          stabilizationWindowSeconds: 300
          policies:
          - type: Percent
            value: 100
            periodSeconds: 15
  triggers:
  - type: cpu
    metadata:
      type: Utilization
      value: "3"
  # {list of triggers to activate scaling of the target resource}

#  triggers:
#  - type: rabbitmq
#    metadata:
#      host: amqp://faasoong:tnd@localhost:5672/dev1
#      protocol: amqp 
#      mode: QueueLength 
#      value: "3" 
#      queueName: hello
#      vhostName: /dev1

#  triggers:
#  - type: cpu
#    metadata:
#      type: Utilization
#      value: "3"
#  # {list of triggers to activate scaling of the target resource}


#  triggers:
#  - type: rabbitmq
#    metadata:
#      protocol: amqp
#      queueName: hello
#      mode: QueueLength
#      value: "3"
#    authenticationRef:
#      name: keda-trigger-auth-rabbitmq-conn
#---
#apiVersion: v1
#kind: Secret
#metadata:
#  name: keda-rabbitmq-secret
#data:
#  host: amqp://faasoong:tnd@localhost:5672/dev1 # base64 encoded value of format amqp://guest:password@localhost:5672/vhost
#---
#apiVersion: keda.sh/v1alpha1
#kind: TriggerAuthentication
#metadata:
#  name: keda-trigger-auth-rabbitmq-conn
#  namespace: keda
#spec:
#  secretTargetRef:
#    - parameter: host
#      name: keda-rabbitmq-secret
#      key: host
